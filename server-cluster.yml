## Docker-Compose file is used to start flow.ci services in cluster

version: "3.4"

services:
  db:
    image: mongo:4.2
    restart: always
    container_name: flowci-db
    volumes:
      - "$FLOWCI_DATABASE_DIR:/data/db"
    ports:
      - "27017:27017"
    networks:
      flowci_net:
        ipv4_address: 172.1.3.1

  zk:
    image: zookeeper:3.6
    container_name: flowci-zk
    restart: always
    ports:
      - "2181:2181"
    networks:
      flowci_net:
        ipv4_address: 172.1.3.2

  rabbitmq:
    image: rabbitmq:3-management
    container_name: flowci-rabbitmq
    ports:
      - "5672:5672"
    networks:
      flowci_net:
        ipv4_address: 172.1.3.3

  minio:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    container_name: flowci-minio
    environment:
      MINIO_ACCESS_KEY: $FLOWCI_DEFAULT_MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $FLOWCI_DEFAULT_MINIO_SECRET_KEY
    volumes:
      - "$FLOWCI_DATA_DIR:/data"
    command: server /data
    networks:
      flowci_net:
        ipv4_address: 172.1.3.4

  ## config core service cluster
  core1:
    image: flowci/core
    container_name: flowci-core-1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      FLOWCI_LOG_LEVEL: DEBUG
      FLOWCI_SERVER_URL: $FLOWCI_SERVER_URL
      FLOWCI_MONGODB_URI: mongodb://db:27017/flow_ci_db
      FLOWCI_RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      FLOWCI_MINIO_ENDPOINT: http://minio:9000
      FLOWCI_MINIO_KEY: $FLOWCI_DEFAULT_MINIO_ACCESS_KEY
      FLOWCI_MINIO_SECRET: $FLOWCI_DEFAULT_MINIO_SECRET_KEY
      FLOWCI_ZK_HOST: zk
      FLOWCI_AGENT_VOLUMES: $FLOWCI_AGENT_VOLUMES
      FLOWCI_SERVER_PORT: 8080
    command:
      [
        "./wait_for_it.sh",
        "rabbitmq:5672",
        "-t",
        "0",
        "--strict",
        "--",
        "java",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:-UseAdaptiveSizePolicy",
        "-Xms1500m",
        "-Xmx1500m",
        "-Xmn900m",
        "-XX:SurvivorRatio=5",
        "-jar",
        "flow-ci-core.jar",
      ]
    depends_on:
      - rabbitmq
      - db
      - zk
      - minio
    networks:
      flowci_net:
        ipv4_address: 172.1.2.1

  core2:
    image: flowci/core
    container_name: flowci-core-2
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      FLOWCI_LOG_LEVEL: DEBUG
      FLOWCI_SERVER_URL: $FLOWCI_SERVER_URL
      FLOWCI_MONGODB_URI: mongodb://db:27017/flow_ci_db
      FLOWCI_RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      FLOWCI_MINIO_ENDPOINT: http://minio:9000
      FLOWCI_MINIO_KEY: $FLOWCI_DEFAULT_MINIO_ACCESS_KEY
      FLOWCI_MINIO_SECRET: $FLOWCI_DEFAULT_MINIO_SECRET_KEY
      FLOWCI_ZK_HOST: zk
      FLOWCI_AGENT_VOLUMES: $FLOWCI_AGENT_VOLUMES
      FLOWCI_SERVER_PORT: 8080
    command:
      [
        "./wait_for_it.sh",
        "rabbitmq:5672",
        "-t",
        "0",
        "--strict",
        "--",
        "java",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:-UseAdaptiveSizePolicy",
        "-Xms1500m",
        "-Xmx1500m",
        "-Xmn900m",
        "-XX:SurvivorRatio=5",
        "-jar",
        "flow-ci-core.jar",
      ]
    depends_on:
      - rabbitmq
      - db
      - zk
      - minio
    networks:
      flowci_net:
        ipv4_address: 172.1.2.2

  ## config slb
  slb:
    image: caddy:2
    container_name: flowci-slb
    ports:
      - "$FLOWCI_SERVER_PORT:8080"
    volumes:
      - "$PWD/Caddyfile:/etc/caddy/Caddyfile"
    networks:
      flowci_net:
        ipv4_address: 172.1.2.3
    

  web:
    image: flowci/web
    container_name: flowci-web
    ports:
      - "$FLOWCI_WEB_PORT:80"
    environment:
      FLOWCI_SERVER_URL: $FLOWCI_SERVER_URL
    networks:
      flowci_net:
        ipv4_address: 172.1.1.1

networks:
  flowci_net:
    ipam:
      driver: default
      config:
        - subnet: "172.1.0.0/16"
